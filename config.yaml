name: "gjst-network"
#
# Schema version of the content. Used by the SDK to apply the corresponding parsing rules.
#
version: 1.0.0

#
# The client section used by GO SDK.
#
client:

  # Which organization does this application instance belong to? The value must be the name of an org
  # defined under "organizations"
  organization: mmOrg

  logging:
    level: info

  # Global configuration for peer, event service and orderer timeouts
  # if this this section is omitted, then default values will be used (same values as below)
#  peer:
#    timeout:
#      connection: 10s
#      response: 180s
#      discovery:
#        # Expiry period for discovery service greylist filter
#        # The channel client will greylist peers that are found to be offline
#        # to prevent re-selecting them in subsequent retries.
#        # This interval will define how long a peer is greylisted
#        greylistExpiry: 10s
#  eventService:
#    # Event service type (optional). If not specified then the type is automatically
#    # determined from channel capabilities.
#    type: (deliver|eventhub)
    # the below timeouts are commented out to use the default values that are found in
    # "pkg/fab/endpointconfig.go"
    # the client is free to override the default values by uncommenting and resetting
    # the values as they see fit in their config file
#    timeout:
#      connection: 15s
#      registrationResponse: 15s
#  orderer:
#    timeout:
#      connection: 15s
#      response: 15s
#  global:
#    timeout:
#      query: 180s
#      execute: 180s
#      resmgmt: 180s
#    cache:
#      connectionIdle: 30s
#      eventServiceIdle: 2m
#      channelConfig: 30m
#      channelMembership: 30s
#      discovery: 10s
#      selection: 10m

  # Root of the MSP directories with keys and certs.
  cryptoconfig:
    path: /var/certification/0913a2ddb3f644ab83786b17d8ae1026/crypto-config

  # Some SDKs support pluggable KV stores, the properties under "credentialStore"
  # are implementation specific
  credentialStore:
    path: /var/fabric-client-kvs_mmOrg

    # [Optional]. Specific to the CryptoSuite implementation used by GO SDK. Software-based implementations
    # requiring a key store. PKCS#11 based implementations does not.
    cryptoStore:
      path: /var/fabric-client-kvs_mmOrg

   # BCCSP config for the client. Used by GO SDK.
  BCCSP:
    security:
     enabled: true
     default:
      provider: "SW"
     hashAlgorithm: "SHA2"
     softVerify: true
     level: 256

  tlsCerts:
    # [Optional]. Use system certificate pool when connecting to peers, orderers (for negotiating TLS) Default: false
    systemCertPool: false

    # [Optional]. Client key and cert for TLS handshake with peers and orderers
    client:
      key:
        path:
      cert:
        path:

#
# [Optional]. But most apps would have this section so that channel objects can be constructed
# based on the content below. If an app is creating channels, then it likely will not need this
# section.
#
channels:
  # name of the channel
  mmchannel:
    # Required. list of orderers designated by the application to use for transactions on this
    # channel. This list can be a result of access control ("org1" can only access "ordererA"), or
    # operational decisions to share loads from applications among the orderers.  The values must
    # be "names" of orgs defined under "organizations/peers"
    # deprecated: not recommended, to override any orderer configuration items, entity matchers should be used.
    # orderers:
    #  - orderer.example.com

    # Required. list of peers from participating orgs
    peers:
      peer0.mmOrg.51mm.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

      peer1.mmOrg.51mm.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

      peer0.btcOrg.51mm.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

      peer1.btcOrg.51mm.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true



    policies:
      #[Optional] options for retrieving channel configuration blocks
      queryChannelConfig:
        #[Optional] min number of success responses (from targets/peers)
        minResponses: 1
        #[Optional] channel config will be retrieved for these number of random targets
        maxTargets: 1
        #[Optional] retry options for query config block
        retryOpts:
          #[Optional] number of retry attempts
          attempts: 5
          #[Optional] the back off interval for the first retry attempt
          initialBackoff: 500ms
          #[Optional] the maximum back off interval for any retry attempt
          maxBackoff: 5s
          #[Optional] he factor by which the initial back off period is exponentially incremented
          backoffFactor: 2.0
      #[Optional] options for retrieving discovery info
      discovery:
        #[Optional] discovery info will be retrieved for these number of random targets
        maxTargets: 2
        #[Optional] retry options for retrieving discovery info
        retryOpts:
          #[Optional] number of retry attempts
          attempts: 4
          #[Optional] the back off interval for the first retry attempt
          initialBackoff: 500ms
          #[Optional] the maximum back off interval for any retry attempt
          maxBackoff: 5s
          #[Optional] he factor by which the initial back off period is exponentially incremented
          backoffFactor: 2.0
      #[Optional] options for the event service
      eventService:
        # [Optional] resolverStrategy specifies the peer resolver strategy to use when connecting to a peer
        # Possible values: [PreferOrg (default), MinBlockHeight, Balanced]
        #
        # PreferOrg:
        #   Determines which peers are suitable based on block height lag threshold, although will prefer the peers in the
        #   current org (as long as their block height is above a configured threshold). If none of the peers from the current org
        #   are suitable then a peer from another org is chosen.
        # MinBlockHeight:
        #   Chooses the best peer according to a block height lag threshold. The maximum block height of all peers is
        #   determined and the peers whose block heights are under the maximum height but above a provided "lag" threshold are load
        #   balanced. The other peers are not considered.
        # Balanced:
        #   Chooses peers using the configured balancer.
        resolverStrategy: PreferOrg
        # [Optional] balancer is the balancer to use when choosing a peer to connect to
        # Possible values: [Random (default), RoundRobin]
        balancer: Random
        # [Optional] blockHeightLagThreshold sets the block height lag threshold. This value is used for choosing a peer
        # to connect to. If a peer is lagging behind the most up-to-date peer by more than the given number of
        # blocks then it will be excluded from selection.
        # If set to 0 then only the most up-to-date peers are considered.
        # If set to -1 then all peers (regardless of block height) are considered for selection.
        # Default: 5
        blockHeightLagThreshold: 5
        # [Optional] reconnectBlockHeightLagThreshold - if >0 then the event client will disconnect from the peer if the peer's
        # block height falls behind the specified number of blocks and will reconnect to a better performing peer.
        # If set to 0 then this feature is disabled.
        # Default: 10
        # NOTES:
        #   - peerMonitorPeriod must be >0 to enable this feature
        #   - Setting this value too low may cause the event client to disconnect/reconnect too frequently, thereby
        #     affecting performance.
        reconnectBlockHeightLagThreshold: 10
        # [Optional] peerMonitorPeriod is the period in which the connected peer is monitored to see if
        # the event client should disconnect from it and reconnect to another peer.
        # Default: 0 (disabled)
        peerMonitorPeriod: 5s

#
# list of participating organizations in this network
#
organizations:
  mmOrg:
    mspid: mmOrg
    cryptoPath: /var/certification/0913a2ddb3f644ab83786b17d8ae1026/crypto-config/peerOrganizations/mmOrg.51mm.com/users/Admin@mmOrg.51mm.com/msp
    peers:
      - peer0.mmOrg.51mm.com
      - peer1.mmOrg.51mm.com

    # [Optional]. Certificate Authorities issue certificates for identification purposes in a Fabric based
    # network. Typically certificates provisioning is done in a separate process outside of the
    # runtime network. Fabric-CA is a special certificate authority that provides a REST APIs for
    # dynamic certificate management (enroll, revoke, re-enroll). The following section is only for
    # Fabric-CA servers.
    certificateAuthorities:
      - ca.mmOrg.example.com
      
  btcOrg:
    mspid: btcOrg
    cryptoPath: /var/certification/0913a2ddb3f644ab83786b17d8ae1026/crypto-config/peerOrganizations/btcOrg.51mm.com/users/User1@btcOrg.51mm.com/msp
    peers:
      - peer0.btcOrg.51mm.com
      - peer1.btcOrg.51mm.com
#
# List of orderers to send transaction and channel create/update requests to. For the time
# being only one orderer is needed. If more than one is defined, which one get used by the
# SDK is implementation specific. Consult each SDK's documentation for its handling of orderers.
#
orderers:
  orderer.example.com:
    url: 192.168.1.100:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: order0.51mm.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: /var/certification/0913a2ddb3f644ab83786b17d8ae1026/crypto-config/ordererOrganizations/51mm.com/tlsca/tlsca.51mm.com-cert.pem

#
# List of peers to send various requests to, including endorsement, query
# and event listener registration.
#
peers:
  peer0.mmOrg.51mm.com:
    # this URL is used to send endorsement and query requests
    url: 192.168.1.100:7051
    # eventUrl is only needed when using eventhub (default is delivery service)
    eventUrl: 192.168.1.100:7053

    grpcOptions:
      ssl-target-name-override: peer0.mmOrg.51mm.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: /var/certification/0913a2ddb3f644ab83786b17d8ae1026/crypto-config/peerOrganizations/mmOrg.51mm.com/tlsca/tlsca.mmOrg.51mm.com-cert.pem

  peer1.mmOrg.51mm.com:
    # this URL is used to send endorsement and query requests
    url: 192.168.1.100:8051
    # eventUrl is only needed when using eventhub (default is delivery service)
    eventUrl: 192.168.1.100:8053

    grpcOptions:
      ssl-target-name-override: peer1.mmOrg.51mm.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: /var/certification/0913a2ddb3f644ab83786b17d8ae1026/crypto-config/peerOrganizations/mmOrg.51mm.com/tlsca/tlsca.mmOrg.51mm.com-cert.pem

  peer0.btcOrg.51mm.com:
    # this URL is used to send endorsement and query requests
    url: 192.168.1.100:9051
    # eventUrl is only needed when using eventhub (default is delivery service)
    eventUrl: 192.168.1.100:9053

    grpcOptions:
      ssl-target-name-override: peer0.btcOrg.51mm.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: /var/certification/0913a2ddb3f644ab83786b17d8ae1026/crypto-config/peerOrganizations/btcOrg.51mm.com/tlsca/tlsca.btcOrg.51mm.com-cert.pem

  peer1.btcOrg.51mm.com:
    # this URL is used to send endorsement and query requests
    url: 192.168.1.100:10051
    # eventUrl is only needed when using eventhub (default is delivery service)
    eventUrl: 192.168.1.100:10053

    grpcOptions:
      ssl-target-name-override: peer1.btcOrg.51mm.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: /var/certification/0913a2ddb3f644ab83786b17d8ae1026/crypto-config/peerOrganizations/btcOrg.51mm.com/tlsca/tlsca.btcOrg.51mm.com-cert.pem

#
# Fabric-CA is a special kind of Certificate Authority provided by Hyperledger Fabric which allows
# certificate management to be done via REST APIs. Application may choose to use a standard
# Certificate Authority instead of Fabric-CA, in which case this section would not be specified.
#
certificateAuthorities:
  ca.mmOrg.51mm.com:
    url: http://192.168.1.100:7054
    tlsCACerts:
      # Certificate location absolute path
      path: /var/certification/0913a2ddb3f644ab83786b17d8ae1026/crypto-config/peerOrganizations/mmOrg.51mm.com/ca/ca.btcOrg.51mm.com-cert.pem

    # Fabric-CA supports dynamic user enrollment via REST APIs. A "root" user, a.k.a registrar, is
    # needed to enroll and invoke new users.
    registrar:
      enrollId: admin
      enrollSecret: adminpw
    # [Optional] The optional name of the CA.
    caName: ca.mmOrg.51mm.com

entityMatchers:
  peer:
    - pattern: (\w*)peer0.mmOrg.51mm.com(\w*)
      urlSubstitutionExp: 192.168.1.100:7051
      eventUrlSubstitutionExp: 192.168.1.100:7053
      sslTargetOverrideUrlSubstitutionExp: peer0.mmOrg.51mm.com
      mappedHost: peer0.mmOrg.51mm.com

    - pattern: (\w*)peer1.mmOrg.51mm.com(\w*)
      urlSubstitutionExp: 192.168.1.100:8051
      eventUrlSubstitutionExp: 192.168.1.100:8053
      sslTargetOverrideUrlSubstitutionExp: peer1.mmOrg.51mm.com
      mappedHost: peer1.mmOrg.51mm.com
      
    - pattern: (\w*)peer0.btcOrg.51mm.com(\w*)
      urlSubstitutionExp: 192.168.1.100:9051
      eventUrlSubstitutionExp: 192.168.1.100:9053
      sslTargetOverrideUrlSubstitutionExp: peer0.btcOrg.51mm.com
      mappedHost: peer0.btcOrg.51mm.com
      
    - pattern: (\w*)peer1.btcOrg.51mm.com(\w*)
      urlSubstitutionExp: 192.168.1.100:10051
      eventUrlSubstitutionExp: 192.168.1.100:10053
      sslTargetOverrideUrlSubstitutionExp: peer1.btcOrg.51mm.com
      mappedHost: peer1.btcOrg.51mm.com

  orderer:
    - pattern: (\w*)order0.51mm.com(\w*)
      urlSubstitutionExp: 192.168.1.100:7050
      sslTargetOverrideUrlSubstitutionExp: order0.51mm.com
      mappedHost: order0.51mm.com

  certificateAuthorities:
    - pattern: (\w*)ca.mmOrg.51mm.com(\w*)
      urlSubstitutionExp: http://192.168.1.100:7054
      mappedHost: ca.mmOrg.51mm.com
